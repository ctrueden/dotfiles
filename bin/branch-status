#!/bin/bash

#
# branch-status - scan for branches with unpushed changes
#

branch_status() {
	dir=$1
	repo=$2
	test -d "$dir/.git" || return
	cd "$dir"

	# NB: Portions of the following were stolen from:
	# http://stackoverflow.com/a/2658301

	# check for dirty working copy
	test "$(git diff --shortstat 2> /dev/null | tail -n1)" == "" ||
		printf "%20s : %s\n" "$repo" "{DIRTY}"

	# check for untracked files
	test "$(git status --porcelain 2> /dev/null | grep "^??")" &&
		printf "%20s : %s\n" "$repo" "{UNTRACKED}"

	# check for stashes
	test "$(git stash list | tail -n1)" == "" ||
		printf "%20s : %s\n" "$repo" "{STASH}"

	# check branches
	if [ "$all" ]
	then
		# report on all local branches
		branches=$(git branch -vv |
			sed -E 's/^\*? *//' |
			sed -E 's/  */~/g')
	else
		# check for unpushed branches
		branches=$(git branch -vv |
			grep -v '\[[^ ]\+\]' |
			sed -E 's/^\*? *//' |
			sed -E 's/  */~/g')
	fi
	for branch in $branches
	do
		branch="$(echo "$branch" | sed 's/~/ /g')"
		test "$branch" != "" || continue
		if [ "$all" ]
		then
			upstream=$(echo "$branch" | sed -E 's/[^\[]*\[([^ ]+)\].*/\1/')
			head=$(git branch -a | grep remotes.origin.HEAD | sed 's/.* -> //')
			test "$upstream" != "$head" || continue
			test "$upstream" != "origin/gh-pages" || continue
		fi
		printf "%20s : %s\n" "$repo" "$branch"
	done
}

scan_myrepos="yes"
for arg in "$@"
do
	case "$arg" in
		-a)
			all=1
			;;
		*)
			scan_myrepos=""
			branch_status "$arg" "$arg"
			;;
	esac
done

if [ "$scan_myrepos" ]
then
	repos=$(mr-remotes)
	for line in $repos
	do (
		entry=$(echo "$line" | cut -f2)
		test "$entry" != "DEFAULT" || continue
		dir="$HOME/$entry"
		repo="$(echo "$dir" | sed 's/.*\///')"
		branch_status "$dir" "$repo"
	) done
fi
